QUESTION 1: Which value of slices did you select for your machine to solve the polynomial with 1 thread with at least a 30 second runtime: 

134000000

QUESTION 2: Provide the output of ``time polyb nn`` (or the improved version in the lecture video, if you prefer) for the following values of nn threads shown below:

Example Timing:

real	0m22.551s
user	0m22.524s
sys	0m0.012s


YOUR Timing:

Without threads:

real	0m31.620s
user	0m31.613s
sys	0m0.004s

With 2 threads:

real	0m17.792s
user	0m34.805s
sys	0m0.004s

With 4 threads:

real	0m13.177s
user	0m38.457s
sys	0m0.004s

With 6 threads:

real	0m13.014s
user	0m38.796s
sys	0m0.012s

With 8 threads:

real	0m13.080s
user	0m38.645s
sys	0m0.020s

With 12 threads:

real	0m13.735s
user	0m40.960s
sys	0m0.012s

With 24 threads:

real	0m12.938s
user	0m38.744s
sys	0m0.028s


QUESTION 3: Does adding more threads continue to speed up the program? Do more threads ever slow down the program slightly?  Why or why not?

Yes, adding more threads continue to speed up the program significantly till certain point. The program started slow down very slightly or not speeding up after 4-6 threads. This is because I am using dual core intel i7 processor with only 4 logical processors due to which only 4 threads get to be processed at a time.

QUESTION 4: Does adding more threads increase the "system load", or is it constant regardless of the number of threads?  Why?

Yes, adding more threads increse the "system load" as seen in the above results.  This is because adding more threads make the system to utilize more and more processors at a time.




